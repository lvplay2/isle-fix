name: Build

on: [push, pull_request]

jobs:
  build-current-toolchain:
    name: Current ${{ matrix.toolchain.name }}
    runs-on: windows-latest
    defaults:
      run:
        shell: ${{ matrix.toolchain.shell }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
        - { name: 'MSVC',           shell: 'sh',        setup-cmake: true, setup-ninja: true, setup-msvc: true }
        - { name: 'msys2 mingw32',  shell: 'msys2 {0}', msystem: mingw32, msys-env: mingw-w64-i686,        clang-tidy: true, werror: true }

    steps:
      - name: Set up MSYS2
        if: ${{ !!matrix.toolchain.msystem }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.toolchain.msystem }}
          install: >-
            ${{ matrix.toolchain.msys-env }}-cc
            ${{ matrix.toolchain.msys-env }}-cmake
            ${{ matrix.toolchain.msys-env }}-ninja
            ${{ matrix.toolchain.msys-env }}-clang-tools-extra

      - name: Setup cmake
        if: matrix.toolchain.setup-cmake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Setup ninja
        if: matrix.toolchain.setup-ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Setup vcvars
        if: matrix.toolchain.setup-msvc
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - uses: actions/checkout@v4

      - name: Build
        run: |
          cmake -S . -B build -GNinja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DISLE_USE_SMARTHEAP=OFF \
            -DISLE_USE_DX5_LIBS=${{ !matrix.toolchain.no-dx5-libs }} \
            -DENABLE_CLANG_TIDY=${{ !!matrix.toolchain.clang-tidy }} \
            -DISLE_WERROR=${{ !!matrix.toolchain.werror }} \
            -Werror=dev
          cmake --build build -- -k0

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
        name: Win32
        path: |
          build/CONFIG.EXE
          build/CONFIG.PDB
          build/ISLE.EXE
          build/ISLE.PDB
          build/LEGO1.DLL
          build/LEGO1.PDB

  build:
    name: 'MSVC 4.20'
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/checkout@v4
      with:
        repository: itsmattkc/msvc420
        path: msvc420

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.15.x'

    - name: Patch MSVC 4.2
      run: |
        tools/patch_c2.py msvc420/bin/C2.EXE

    - name: Build
      shell: cmd
      run: |
        call .\msvc420\bin\VCVARS32.BAT x86
        cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DISLE_USE_SMARTHEAP=OFF -G "NMake Makefiles"
        cmake --build build

  upload:
    name: Upload artifacts
    needs: [build-current-toolchain]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'lvplay2/isle-fix' }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: probonopd/uploadtool

    - uses: actions/download-artifact@main
      with:
       name: Win32
       path: build

    - name: Upload Continuous Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        UPLOAD_KEY: ${{ secrets.UPLOAD_KEY }}
      run: |
        ./upload.sh \
          build/CONFIG.EXE \
          build/ISLE.EXE \
          build/LEGO1.DLL
